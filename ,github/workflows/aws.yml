name: Philoberry CI/CD Pipeline #내 CI/CD 파이프라인 

on:
  push:
    branches:
      - main 
env:
	AWS_REGION: ap-northeast-2a
	ECS_CLUSTER: philoberry-ecs-cluster
	CONTAINER_NAME: philoberry-repository_frontend
	ECS_SERVICE: staging
	ECS_TD: ../ecs-service/config.json.tpl
jobs:
  deploy:
    name: Deploy
    runs-on: amzn2-ami-ecs-hvm-*-x86_64-ebs # ecs-를 사용하는 경우 ubunt-latest 가 아닌 이렇게작성
    environment: dev
    steps:
      - name: Checkout code 
        uses: actions/checkout@v2 

      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1 # 오타 수정(configrue -> configure)
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}} # 오타 수정(username -> aws-access-key-id)
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 오타 수정(password -> aws-secret-access-key)
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY_URL : ${{ secrets.ECR_REGISTRY_URL }} # 환경변수 이름 변경 및 Secrets 사용 추가(ECR_REGISTRY -> ECR_REGISTRY_URL)
          ECR_REPOSITORY_NAME : "philoberry_front/service_dev" # 환경변수 이름 변경(ECR_REPOSITORY -> ECR_REPOSITORY_NAME)
          IMAGE_TAG : latest  # 환경변수 이름 변경(IAMGE_TAG -> IMAGE_TAG)
        run : |
            docker build -t ${ECR_REGISTRY_URL}/${ECR_REPOSITORY_NAME}:${IMAGE_TAG} .  # 변수 이름 변경 및 Dockerfile 위치 지정 추가(./Dockerfile) 
            docker push ${ECR_REGISTRY_URL}/${ECR_REPOSITORY_NAME}:${IMAGE_TAG}
            echo "::set-output name=image::${ECR_REGISTRY_URL}/${ECR_REPOSITORY_NAME}:${IMAGE_TAG}"  # 변수명 오류 수정(name-image -> name=image)

      - name : Fill in the new image ID in the Amazon ECS task definition  
         id : task-def  
         uses : aws-actions/amazon-ecs-render-task-definition@v1  
         with :
             task-definition : {{ env.ECS_TD }}   # task-definition 경로를 명확하게 지정해주세요.
             container-name : {{ env.CONTAINER_NAME }}   ## CONTAINER_NAME 이라는 환경 변수가 선언되어 있지 않아서 임의의 값으로 대체했습니다.
             image : ${{ steps.build-image.outputs.image }}

      - name : Deploy Amazon ECS task definition  
         uses : aws-actions/amazon-ecs-deploy-task-definition@v1   
         with :
           task-definition:${{ steps.task-def.outputs.task-definition }}
           service:${{ env.ECS_SERVICE }}
           cluster:${{ env.ECS_CLUSTER }}
           wait-for-service-stability:true